create table vendors (VENDOR_ID number primary key not null,
NAME   varchar2(100) not null,
LOGO   varchar2(50) not null,
UNSUBSCRIBE_URL varchar2(50),
BOUNCE_THRESHOLD varchar2(50),
CODENAME varchar2(50),
MAILSENSOR_URL varchar2(50),
HOST_UNSUBSCRIBE varchar2(50),
CSM_NAME varchar2(50),
CSM_PHONE varchar2(50),
CSM_EMAIL varchar2(150),
MULTILIST_ENABLED varchar2(50),
AGENCY_ID varchar2(50),
ACWEB_LOGO_PATH varchar2(50),
VM_FOREIGN_KEY varchar2(50),
ARCHIVE_STATUS varchar2(50), 
PRIORITY varchar2(50),
ORG_ID varchar2(50),
MULTIBYTE_IND varchar2(50),
IMPACT_VERSION_NUM varchar2(50),
MODIFIED_BY varchar2(50),
MODIFIED_ON date,
CREATED_BY   varchar2(50) not null, 
CREATED_ON  date not null,
POSTMASTER_COMPLAINT_UNSUB varchar2(50), 
WIRELESS_EMAILS_ALLOWED varchar2(50));

create table vendor_lists(
VENDOR_ID number not null,
VENDOR_LIST_ID number not null,
NAME   varchar2(50) not null,
DESCRIPTION varchar2(50),
UNSUBSCRIBE_URL varchar2(50),
HOST_UNSUBSCRIBE varchar2(50),
MODIFIED_BY varchar2(50),
MODIFIED_ON date,
CREATED_BY  varchar2(50) not null,
CREATED_ON  date not null );

alter table vendor_lists add constraint  pk_vl primary key(vendor_id,vendor_list_id);
alter table vendor_lists add constraint fk_vl FOREIGN KEY (VENDOR_ID)  references vendors(VENDOR_ID);

create table vendor_list_members(
MEMBER_ID  number not null,
VENDOR_LIST_ID number not null,
SUBSCRIBED_ON  date not null,
SUBSCRIPTION_SOURCE  varchar2(50) not null,
MODIFIED_ON date ,
MODIFIED_BY varchar2(50),
LIST_STATUS varchar2(50),
LIST_STATUS_SOURCE varchar2(50));

alter table vendor_list_members add constraint pk_vlm primary key (MEMBER_ID,VENDOR_LIST_ID);

create table Vendor_members(
VENDOR_ID number not null,
MEMBER_ID number not null,
EMAIL varchar2(100),
LOW_EMAIL varchar2(100),
KEY varchar2(100),
FIRST_NAME  varchar2(100),
LAST_NAME varchar2(100),
CREATED_ON date,
ADDRESS1 varchar2(100),
ADDRESS2 varchar2(100),
CITY varchar2(100),
STATE varchar2(100),
ZIP_CODE varchar2(100),
COUNTRY varchar2(100),
AREA_CODE varchar2(100),
PHONE varchar2(100),
COUNTRY_CODE varchar2(100), 
BIRTHDAY date,
BIRTHMONTH varchar2(10),
BIRTHYEAR number,
GENDER varchar2(10),
MS_SHOPPER_ID varchar2(10),
EM_CLIENT_ID varchar2(100),
MP_OVERRIDE  varchar2(100),
DOMAIN varchar2(100),
VALID varchar2(100),
MARKED_INVALID_ON date,
REGISTRATION_DATE date,
SUBSCRIPTION_SOURCE varchar2(100), 
DEREGISTERED_SOURCE varchar2(100),
DEREGISTERED_ON date,
EE_SOURCE_ID varchar2(100),
MODIFIED_BY varchar2(100),
MODIFIED_ON date,
PASSWORD varchar2(100),
INVALID_INTERNAL_FLAG varchar2(100),
INVALID_CODE varchar2(100),
MAIL_SEQ_UNUSED varchar2(100), 
FAIL_SEQ_UNUSED varchar2(100),
FAIL_TYPE_UNUSED varchar2(100));

ALTER TABLE Vendor_members ADD CONSTRAINT PK_VM primary key (VENDOR_ID,MEMBER_ID);


 
CREATE TABLE PROGRAMS
( PROGRAM_ID NUMBER NOT NULL PRIMARY KEY,
PROGRAM_NAME VARCHAR2(100),
PROGRAM_TYPE VARCHAR2(100),
VENDOR_ID NUMBER, 
VENDOR_LIST_ID NUMBER,
SPECIAL_PROGRAM_IND VARCHAR2(100),
MODIFIED_BY VARCHAR2(100),
MODIFIED_ON DATE,
PROGRAM_DIRECTOR VARCHAR2(100));

ALTER TABLE PROGRAMS ADD CONSTRAINT FK_P1 FOREIGN KEY(VENDOR_ID) REFERENCES VENDORS(VENDOR_ID);


CREATE TABLE CAMPAIGNS(
CAMPAIGN_ID NUMBER NOT NULL PRIMARY KEY,
CAMPAIGN_NAME VARCHAR2(100) NOT NULL,
VENDOR_ID NUMBER NOT NULL,
CAMPAIGN_TYPE VARCHAR2(10) NOT NULL,
LINK_TRACKING VARCHAR2(100),
DESCRIPTION VARCHAR2(100), 
TARGET_LAUNCH_DATE DATE,
OBJECTIVE_ID NUMBER,
CAMPAIGN_STATUS_ID NUMBER,
PROGRAM_ID NUMBER,
SEED_CAT_TYPES_IND NUMBER,
RECURRENCE_ID NUMBER,
MODIFIED_BY VARCHAR2(100),
MODIFIED_ON DATE,
TEMPLATE_CAMPAIGN_ID NUMBER,
STAR_DATE DATE,
END_DATE DATE);

ALTER TABLE  CAMPAIGNS ADD CONSTRAINT FK_CAM FOREIGN KEY (PROGRAM_ID) REFERENCES PROGRAMS ( PROGRAM_ID);

CREATE TABLE MT_MEMBER_ATTRIBUTES	 (
ATTRIBUTE_ID	 NUMBER NOT NULL PRIMARY KEY,
ATTRIBUTE	 VARCHAR2(50),
DESCRIPTION	 VARCHAR2(100),
DEFINED_ON	 DATE,
VENDOR_REFERENCE	 VARCHAR2(50),
FIELD_TYPE	 VARCHAR2(50),
MULTIVALUE	 VARCHAR2(50),
DATE_FORMAT	 VARCHAR2(50),
MODIFIED_ON	 DATE,
MODIFIED_BY	 VARCHAR2(50),
ATTRIBUTE_TYPE_IND	 NUMBER) ;

CREATE TABLE MT_MEMBERS	
(MEMBER_ID	 NUMBER,
ATTRIBUTE_ID	 NUMBER,
VALUE	  VARCHAR2(50),
SCORE	  VARCHAR2(50),
ASSIGNED_ON	 DATE);

CREATE TABLE MT_MEMBER_HISTORY(MEMBER_ID	 NUMBER,
ATTRIBUTE_ID	 NUMBER,
VALUE	  VARCHAR2(50),
SCORE	  VARCHAR2(50),
ASSIGNED_ON	 DATE,
	DELETE_ON DATE,
	DELETED_BY VARCHAR2(50));
